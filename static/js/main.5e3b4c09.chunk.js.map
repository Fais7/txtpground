{"version":3,"sources":["components/Swtchtggle.jsx","components/Txtar.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["SwitchRoot","styled","SwitchInput","SwitchThumb","theme","palette","mode","encodeURIComponent","SwitchTrack","MUISwitch","props","useSwitch","getInputProps","stateClasses","checked","disabled","focusVisible","className","clsx","UseSwitchesCustom","onChange","toggleB","Txtar","useState","text","setText","heading","value","id","placeholder","event","target","rows","length","onClick","ntext","toUpperCase","toLowerCase","ar","split","atext","i","substring","navigator","clipboard","writeText","document","getSelection","removeAllRanges","newText","join","filter","element","App","setMode","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5e3b4c09.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport { styled } from '@mui/system';\r\nimport { useSwitch } from '@mui/core/SwitchUnstyled';\r\n\r\nconst SwitchRoot = styled('span')(`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 62px;\r\n  height: 34px;\r\n  padding: 7px;\r\n`);\r\n\r\nconst SwitchInput = styled('input')(`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`);\r\n\r\nconst SwitchThumb = styled('span')(\r\n  ({ theme }) => `\r\n  position: absolute;\r\n  display: block;\r\n  background-color: ${theme.palette.mode === 'dark' ? '#003892' : '#001e3c'};\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  top: 1px;\r\n  left: 7px;\r\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n      '#fff',\r\n    )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\r\n  }\r\n\r\n  &.focusVisible {\r\n    background-color: #79B;\r\n  }\r\n\r\n  &.checked {\r\n    transform: translateX(16px);\r\n    \r\n    &:before {\r\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        '#fff',\r\n      )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\r\n    }\r\n  }\r\n`,\r\n);\r\n\r\nconst SwitchTrack = styled('span')(\r\n  ({ theme }) => `\r\n  background-color: ${theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be'};\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n`,\r\n);\r\n\r\nfunction MUISwitch(props) {\r\n  const { getInputProps, checked, disabled, focusVisible } = useSwitch(props);\r\n\r\n  const stateClasses = {\r\n    checked,\r\n    disabled,\r\n    focusVisible,\r\n  };\r\n\r\n  return (\r\n    <SwitchRoot className={clsx(stateClasses)}>\r\n      <SwitchTrack>\r\n        <SwitchThumb className={clsx(stateClasses)} />\r\n      </SwitchTrack>\r\n      <SwitchInput {...getInputProps()} aria-label=\"Demo switch\" />\r\n    </SwitchRoot>\r\n  );\r\n}\r\n\r\nexport default function UseSwitchesCustom(props) {\r\n  return <MUISwitch onChange={props.toggleB} />;\r\n}\r\n","import React, { useState } from 'react';\r\n// import Switch from '@mui/material/Switch';\r\nimport UseSwitchesCustom from './Swtchtggle';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport SummarizeIcon from '@mui/icons-material/Summarize';\r\n\r\nconst Txtar = (props) => {\r\n    let [text, setText] = useState(\"\");\r\n    let hndleuppr = () => {\r\n        let ntext = text.toUpperCase();\r\n        setText(ntext);\r\n    }\r\n    let hndlelwr = () => {\r\n        let ntext = text.toLowerCase();\r\n        setText(ntext);\r\n    }\r\n    let hndlefcap = () => {\r\n        let ntext = text;\r\n        let ar = ntext.split(\" \");\r\n        let atext = \"\";\r\n        for (let i of ar) {\r\n            atext = atext + i.substring(0, 1).toUpperCase() + i.substring(1) + \" \";\r\n        }\r\n\r\n        setText(atext);\r\n    }\r\n    let hndleclr = () => {\r\n        text = '';\r\n        setText(text);\r\n    }\r\n    let hndlecpy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n    let hndleExtraSpc = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`container-fluid bg-${props.mode} text-${props.mode}`}>\r\n                <nav className={`navbar navbar-${props.mode} bg-${props.mode}`}>\r\n                    <div className=\"container-fluid\">\r\n                        <span className=\"navbar-brand mb-0 h1\">TEXT <PlayCircleFilledIcon />grOund</span>\r\n                        <span className=\"navbar-brand\"><UseSwitchesCustom toggleB={props.toggleB} /></span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"container-fluid \">\r\n                    {/* <Switch\r\n                        onChange={props.toggleB}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                    /> */}\r\n                    <h1 className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>{props.heading} <ArrowDownwardIcon /></h1>\r\n                    <textarea className={`form-control text-${props.mode === 'light' ? 'dark' : 'light'} bg-${props.mode === 'light' ? 'light' : 'dark'}`} value={text} id=\"tx2\" placeholder=\"Please enter text here... \" onChange={(event) => {\r\n                        setText(event.target.value);\r\n                    }} rows=\"8\"></textarea>\r\n                </div>\r\n                <div className=\"container-fluid my-2\">\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-warning my-1\" onClick={hndleuppr}>ALL TO UPPERCASE</button>{\" \"}\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-warning my-1\" onClick={hndlelwr}>All to Lowercase</button>{\" \"}\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-info my-1\" onClick={hndlefcap}>All to FirstCaps</button>{\" \"}\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-success my-1\" onClick={hndlecpy}>Copy all</button>{\" \"}\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-primary my-1\" onClick={hndleExtraSpc}>Remove all spaces</button>{\" \"}\r\n                    <button disabled={text.length===0} className=\"btn btn-outline-danger my-1\" onClick={hndleclr}>Clear all</button>{\" \"}\r\n                </div>\r\n                <div className={`container my-2 text-${props.mode === 'light' ? 'dark' : 'light'} text-center`}>\r\n                    <h2 className=\"text-center\"> Text summary <SummarizeIcon /> </h2><hr />\r\n                    <p><i>Words are: <b>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</b> and Characters are: <b>{text.length}</b>.</i></p>\r\n                    <p><i>Minutes to read: <b>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length}</b></i></p><hr />\r\n                </div>\r\n                <div className={`container my-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <h2>Preview your Text</h2>\r\n                    <p>{text}</p>\r\n                </div>\r\n                <footer className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <div className=\"text-center p-3\" >\r\n                        © 2021 Copyright:  FAIS@L F@rhan. \r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Txtar;\r\n","import React, { useState } from 'react';\nimport Txtar from './Txtar';\n\nconst App = () => {\n  let [mode, setMode] = useState('light');\n  const toggleB = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor='dark';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor='light';\n    }\n  }\n  return (\n    <>\n      <div className={`container-fliud bg-${mode === 'light' ? 'dark' : 'light'}  `}>\n        <Txtar heading=\"Enter the text to make it easy\" mode={mode} toggleB={toggleB} />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}